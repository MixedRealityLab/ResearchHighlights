<project name="ResearchHighlights" default="build" basedir=".">

	<description>
		Build file for the Research Highlights website
	</description>

	<!-- DIRECTORIES -->
	<property name="dist.dir" location="dist" />
	<property name="dist.web.css.dir" location="dist/web/css" />
	<property name="dist.sys.css.dir" location="dist/sys/css" />
	<property name="dist.web.js.dir" location="dist/web/js" />
	<property name="dist.sys.js.dir" location="dist/sys/js" />
	<property name="lib.dir" location="lib" />
	<property name="src.dir" location="src"/>
	<property name="src_modes.dir" location="src_modes"/>
	<property name="src_private.dir" location="src_private"/>

	<!-- YUI COMPRESSOR JAR -->
	<property name="yui-compressor.jar" location="${lib.dir}/yuicompressor-2.4.8.jar"/>

	<!-- PARAMETERS REQUIRED FOR BUILD -->
	<condition property="params.mode.set" else="false">
		<isset property="mode"/>
	</condition>

	<condition property="params.addr.set" else="false">
		<and>
			<isset property="path"/>
			<isset property="domain"/>
		</and>
	</condition>

	<!-- ANT TASK DEFINITIONS -->
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement location="${lib.dir}/ant-contrib.jar"/>
		</classpath>
	</taskdef>

	<!-- ANT TARGETS -->
 	<target name="check" description="Check build parameters have been passed" >
		<fail unless="params.mode.set" message="Must provide the output mode: -Dmode=..."/>
		<echo message="Supplied output mode!" />
	</target>

 	<target name="clean" description="Remove built and temporary files" >
		<echo message="Removing previous build" />
		<delete dir="${dist.dir}"/>
	</target>

	<target name="build" depends="check,clean" description="Create the website">
		<tstamp/>

		<echo message="Creating ${dist.dir}" />
		<mkdir dir="${dist.dir}"/>

		<echo message="Copying sources from ${src.dir} to ${dist.dir}" />
		<copy todir="${dist.dir}" >  
        	<fileset dir="${src.dir}" includes="**"/>  
		</copy>

		<echo message="Copying sources from ${src_modes.dir}/${mode} to ${dist.dir}" />
		<copy todir="${dist.dir}" overwrite="true">  
        	<fileset dir="${src_modes.dir}/${mode}" includes="**"/>  
		</copy>

		<echo message="Copying sources from ${src_private.dir} to ${dist.dir}" />
		<copy todir="${dist.dir}" overwrite="true">  
        	<fileset dir="${src_private.dir}" includes="**"/>  
		</copy>

		<if>
			<and>
				<isset property="path"/>
				<isset property="domain"/>
			</and>
			<then>
				<echo message="Setting the DOMAIN and PATH in configuration file" />
				<replace file="${dist.dir}/config.php" token="@@@DOMAIN@@@" value="${domain}"/>
				<replace file="${dist.dir}/config.php" token="@@@PATH@@@" value="${path}"/>
			</then>
		</if>

		<echo message="Replacing DOMAIN, PATH and URI_ROOT in all files, based on configuration" />
		<loadfile property="config.file" srcfile="${dist.dir}/config.php"/>
		<if>
			<not>
				<and>
					<isset property="path"/>
					<isset property="domain"/>
				</and>
			</not>
			<then>
				<propertyregex property="domain"
					override="true"
					input="${config.file}"
					regexp="\\define \('DOMAIN', '([@a-zA-Z\:./_-]*)'\)"
					select="\1" />
				<propertyregex property="path"
					override="true"
					input="${config.file}"
					regexp="\\define \('PATH', '([@a-zA-Z\:./_-]*)'\)"
					select="\1" />
			</then>
		</if>

		<propertyregex property="sysHtaccess"
			override="true"
			input="${config.file}"
			regexp="\\define \('SYS_HTAC', ([a-zA-Z]*)\)"
			select="\1" />
		<if>
			<equals arg1="${sysHtaccess}" arg2="true" />
			<then>
				<property name="uriRoot" value="${domain}${path}"/>
			</then>
			<else>
				<property name="uriRoot" value="${domain}${path}/index.php"/>
			</else>
		</if>

		<replace dir="${dist.dir}" value="${domain}">
			<include name="**/*"/>
			<replacetoken>@@@DOMAIN@@@</replacetoken>
		</replace>
		<replace dir="${dist.dir}" value="${path}">
			<include name="**/*"/>
			<replacetoken>@@@PATH@@@</replacetoken>
		</replace>
		<replace dir="${dist.dir}" value="${domain}${path}">
			<include name="**/*"/>
			<replacetoken>@@@HOME@@@</replacetoken>
		</replace>
		<replace dir="${dist.dir}" value="${uriRoot}">
			<include name="**/*"/>
			<replacetoken>@@@URI_ROOT@@@</replacetoken>
		</replace>
	</target>

	<target name="compress" description="Compress JavaScript and CSS files">
		<echo message="Begining compression processes..." />
		<antcall target="compress-js">
			<param name="dir" value="${dist.sys.js.dir}"/>
		</antcall>
		<antcall target="compress-js">
			<param name="dir" value="${dist.web.js.dir}"/>
		</antcall>

		<antcall target="compress-css">
			<param name="dir" value="${dist.sys.css.dir}"/>
		</antcall>
		<antcall target="compress-css">
			<param name="dir" value="${dist.web.css.dir}"/>
		</antcall>

		<echo message="Compression complete!" />
	</target>

	<target name="compress-js" description="Compress JavaScript files">
		<fail message="Must provide the JS directory with dir parameter">
			<condition>
				<not>
					<isset property="dir"/>
				</not>
			</condition>
		</fail>

		<echo message="Compressing JS files in ${dir}" />
		<apply executable="java"  dest="${dir}" parallel="false" verbose="true" ignoremissing="true">
			<fileset dir="${dir}" includes="**/*.js" excludes="**/*.min.js"/>
			<arg line="-jar"/>
			<arg path="${yui-compressor.jar}"/> 
			<arg line="-o"/>
			<mapper type="glob" from="*.js" to="*.min.js"/>
			<targetfile/>
			<srcfile/>
		</apply>
	</target>

	<target name="compress-css" description="Compress CSS files">
		<fail message="Must provide the CSS directory with dir parameter">
			<condition>
				<not>
					<isset property="dir"/>
				</not>
			</condition>
		</fail>

		<echo message="Compressing CSS files in ${dir}" />
		<apply executable="java"  dest="${dir}" parallel="false" verbose="true" ignoremissing="true">
			<fileset dir="${dir}" includes="**/*.css" excludes="**/*.min.css"/>
			<arg line="-jar"/>
			<arg path="${yui-compressor.jar}"/> 
			<arg line="-o"/>
			<mapper type="glob" from="*.css" to="*.min.css"/>
			<targetfile/>
			<srcfile/>
		</apply>
	</target>

</project>