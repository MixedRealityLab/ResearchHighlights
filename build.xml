<project name="ResearchHighlights" default="quick" basedir=".">

	<description>
		Build file for the Research Highlights website
	</description>

	<!-- DIRECTORIES -->
	<property name="dist.dir" location="dist"/>
	<property name="dist.web.css.dir" location="dist/web/css"/>
	<property name="dist.sys.css.dir" location="dist/sys/css"/>
	<property name="dist.web.js.dir" location="dist/web/js"/>
	<property name="dist.sys.js.dir" location="dist/sys/js"/>
	<property name="lib.dir" location="lib"/>
	<property name="src.dir" location="src"/>
	<property name="src_private.dir" location="src_private"/>

	<!-- YUI COMPRESSOR JAR -->
	<property name="yui-compressor.jar" location="${lib.dir}/yuicompressor-2.4.8.jar"/>

	<!-- PARAMETERS REQUIRED FOR BUILD -->
	<condition property="params.addr.set" else="false">
		<and>
			<isset property="path"/>
			<isset property="domain"/>
		</and>
	</condition>

	<!-- ANT TASK DEFINITIONS -->
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement location="${lib.dir}/ant-contrib.jar"/>
		</classpath>
	</taskdef>

	<!-- ANT TARGETS -->
	<target name="clean" description="Remove built and temporary files" >
		<echo message="Removing previous build"/>
		<delete dir="${dist.dir}"/>
	</target>

	<target name="build" depends="clean" description="Create the website">
		<tstamp/>

		<echo message="Creating ${dist.dir}"/>
		<mkdir dir="${dist.dir}"/>

		<echo message="Copying sources from ${src.dir} to ${dist.dir}"/>
		<copy todir="${dist.dir}" >  
			<fileset dir="${src.dir}" includes="**"/>  
		</copy>

		<echo message="Copying sources from ${src_private.dir} to ${dist.dir}"/>
		<copy todir="${dist.dir}" overwrite="true">  
			<fileset dir="${src_private.dir}" includes="**"/>  
		</copy>

		<if>
			<and>
				<isset property="path"/>
				<isset property="domain"/>
			</and>
			<then>
				<echo message="Setting the DOMAIN and PATH in configuration file"/>
				<replace file="${dist.dir}/config.php" token="@@@DOMAIN@@@" value="${domain}"/>
				<replace file="${dist.dir}/config.php" token="@@@PATH@@@" value="${path}"/>
			</then>
		</if>

		<echo message="Replacing constants in all files, based on configuration"/>
		<loadfile property="config.file" srcfile="${dist.dir}/config.php"/>
		<if>
			<not>
				<and>
					<isset property="path"/>
					<isset property="domain"/>
				</and>
			</not>
			<then>
				<antcall target="set-const">
					<param name="const" value="DOMAIN"/>
					<param name="val" value="${domain}"/>
					<param name="config" value="true"/>
				</antcall>
				<antcall target="set-const">
					<param name="const" value="PATH"/>
					<param name="val" value="${path}"/>
					<param name="config" value="true"/>
				</antcall>
			</then>
		</if>

		<if>
			<not>
				<isset property="email"/>
			</not>
			<then>
				<propertyregex property="email" input="${config.file}" regexp="\\define \('EMAIL', '([@a-zA-Z\:./_-]*)'" select="\1" />
			</then>
		</if>

		<antcall target="set-const">
			<param name="const" value="EMAIL"/>
			<param name="val" value="${email}"/>
			<param name="files" value="**/*"/>
		</antcall>

		<propertyregex property="title" input="${config.file}" regexp="\\define \('TITLE', '(.*)'" select="\1" />
		<antcall target="set-const">
			<param name="const" value="TITLE"/>
			<param name="val" value="${title}"/>
			<param name="files" value="**/*"/>
		</antcall>

		<propertyregex property="title_sep" input="${config.file}" regexp="\\define \('TITLE_SEP', '(.*)'" select="\1" />
		<antcall target="set-const">
			<param name="const" value="TITLE_SEP"/>
			<param name="val" value="${title_sep}"/>
			<param name="files" value="**/*"/>
		</antcall>

		<propertyregex property="site_name" input="${config.file}" regexp="\\define \('SITE_NAME', '(.*)'" select="\1" />
		<antcall target="set-const">
			<param name="const" value="SITE_NAME"/>
			<param name="val" value="${site_name}"/>
			<param name="files" value="**/*"/>
		</antcall>

		<propertyregex property="site_year" input="${config.file}" regexp="\\define \('SITE_YEAR', '(.*)'" select="\1" />
		<antcall target="set-const">
			<param name="const" value="SITE_YEAR"/>
			<param name="val" value="${site_year}"/>
			<param name="files" value="**/*"/>
		</antcall>

		<if>
			<not>
				<isset property="sysHtaccess"/>
			</not>
			<then>
				<propertyregex property="sysHtaccess" input="${config.file}" regexp="\\define \('SYS_HTAC', ([@a-zA-Z\:./_-]*)" select="\1" />
			</then>
		</if>

		<antcall target="set-const">
			<param name="const" value="SYS_HTAC"/>
			<param name="val" value="${sysHtaccess}"/>
			<param name="config" value="true"/>
		</antcall>

		<if>
			<equals arg1="${sysHtaccess}" arg2="true"/>
			<then>
				<property name="uriRoot" value="${domain}${path}"/>
			</then>
			<else>
				<property name="uriRoot" value="${domain}${path}/index.php"/>
			</else>
		</if>

		<antcall target="set-const">
			<param name="const" value="DOMAIN"/>
			<param name="val" value="${domain}"/>
			<param name="files" value="**/*"/>
		</antcall>
		<antcall target="set-const">
			<param name="const" value="PATH"/>
			<param name="val" value="${path}"/>
			<param name="files" value="**/*"/>
		</antcall>
		<antcall target="set-const">
			<param name="const" value="HOME"/>
			<param name="val" value="${domain}${path}"/>
			<param name="files" value="**/*"/>
		</antcall>
		<antcall target="set-const">
			<param name="const" value="URI_ROOT"/>
			<param name="val" value="${uriRoot}"/>
			<param name="files" value="**/*"/>
		</antcall>
	</target>

	<target name="quick" depends="clean,build" description="Create the website">
		<antcall target="set-const">
			<param name="const" value="EXT_JS"/>
			<param name="val" value=".js"/>
			<param name="config" value="true"/>
			<param name="files" value="**/*"/>
		</antcall>

		<antcall target="set-const">
			<param name="const" value="EXT_CSS"/>
			<param name="val" value=".css"/>
			<param name="config" value="true"/>
			<param name="files" value="**/*"/>
		</antcall>
	</target>

	<!-- COMPRESSION TASKS -->
	<target name="full" depends="clean,build" description="Compress JavaScript and CSS files">
		<antcall target="compress-js">
			<param name="dir" value="${dist.sys.js.dir}"/>
		</antcall>
		<antcall target="compress-js">
			<param name="dir" value="${dist.web.js.dir}"/>
		</antcall>

		<antcall target="set-const">
			<param name="const" value="EXT_JS"/>
			<param name="val" value=".min.js"/>
			<param name="config" value="true"/>
			<param name="files" value="**/*"/>
		</antcall>

		<property name="css.ext" location=".min.css"/>
		<antcall target="compress-css">
			<param name="dir" value="${dist.sys.css.dir}"/>
		</antcall>
		<antcall target="compress-css">
			<param name="dir" value="${dist.web.css.dir}"/>
		</antcall>

		<antcall target="set-const">
			<param name="const" value="EXT_CSS"/>
			<param name="val" value=".min.css"/>
			<param name="config" value="true"/>
			<param name="files" value="**/*"/>
		</antcall>
	</target>

	<target name="compress-js" description="Compress JavaScript files">
		<fail message="Must provide the JS directory with dir parameter">
			<condition>
				<not>
					<isset property="dir"/>
				</not>
			</condition>
		</fail>

		<echo message="Compressing JS files in ${dir}"/>
		<apply executable="java"  dest="${dir}" parallel="false" verbose="true" ignoremissing="true">
			<fileset dir="${dir}" includes="**/*.js" excludes="**/*.min.js"/>
			<arg line="-jar"/>
			<arg path="${yui-compressor.jar}"/> 
			<arg line="-o"/>
			<mapper type="glob" from="*.js" to="*.min.js"/>
			<targetfile/>
			<srcfile/>
		</apply>
	</target>

	<target name="compress-css" description="Compress CSS files">
		<fail message="Must provide the CSS directory with dir parameter">
			<condition>
				<not>
					<isset property="dir"/>
				</not>
			</condition>
		</fail>

		<echo message="Compressing CSS files in ${dir}"/>
		<apply executable="java"  dest="${dir}" parallel="false" verbose="true" ignoremissing="true">
			<fileset dir="${dir}" includes="**/*.css" excludes="**/*.min.css"/>
			<arg line="-jar"/>
			<arg path="${yui-compressor.jar}"/> 
			<arg line="-o"/>
			<mapper type="glob" from="*.css" to="*.min.css"/>
			<targetfile/>
			<srcfile/>
		</apply>
	</target>

	<!-- UTILITY TARGETS -->
	<target name="set-const" description="Set a configuration constant">
		<fail message="Must provide the constant, current value and new value">
			<condition>
				<not>
					<or>
						<isset property="const"/>
						<isset property="val"/>
					</or>
				</not>
			</condition>
		</fail>

		<echo message="Set ${const} to ${val}"/>

		<if>
			<and>
				<isset property="config"/>
				<istrue value="${config}"/>
			</and>
			<then>
				<echo message="Apply change in ${dist.dir}/config.php"/>
				<replaceregexp file="${dist.dir}/config.php" flags="gs">
					<regexp pattern="\\define \('${const}', '([@a-zA-Z\:./_-]*)'"/>
					<substitution expression="\\define \('${const}', '${val}'"/>
				</replaceregexp>
			</then>
		</if>

		<if>
			<isset property="files"/>
			<then>
				<echo message="Replace @@@${const}@@@ in ${files}"/>
				<replace dir="${dist.dir}" token="@@@${const}@@@" value="${val}">
					<include name="${files}"/>
				</replace>
			</then>
		</if>
	</target>

</project>